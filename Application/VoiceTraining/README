This directory should include an AcousticModels, Profiles and TrainingModel directory, recordAudio.py, training_script.py, bw, cmudict-en-us.dict, en-us.lm.bin, map_adapt and this README.

Dependencies:
    sudo apt-get install -qq python python-dev python3-pip build-essential swig libpulse-dev
    #sudo apt install sox used for play command in linux
    pip3 install pydub
    pip3 install ffprobe
    pip install sounddevice
    pip install scipy
    pip install pydub

Path Variable:
    VoiceTraining\sphinxbase\bin\Debug\Win32
    VoiceTraining\sphinxtrain-master\bin\Debug\Win32

    Add these 2 relative paths to the system environment variables

How to use record voice lines to use for training:
    (GUI Version)
    1. While in the application, click on "Voice".
    2. In the dropdown menu, click on "Record voice lines".
    3. Choose the training model that you want to record voice lines for.
    4. Say the voice lines prompted on screen. (This part is currently bugged and not working, for now, you'll need to look at the terminal and follow the prompts there)

    (Terminal version)
    1. In the terminal, change directory to VoiceTraining
    2. Execute recordAudio.py
    3. Give the relative path to the training set
       This is in TrainingModel/*
       Example: TrainingModel/test
    4. Give the filename of the fileids and transcription file without extension name.
       Example: test
    5. Follow the prompts on screen.
       After recording the voice lines, it saves them as wav files in the directory of the training set.
    

How to train a language model using recorded voice lines:
    (GUI Version)
    1. While in the application, click on "Voice".
    2. In the dropdown menu, click on "Train language model".
    3. Type in the desired name in the name text field.
    4. Choose the training model containing the recorded voice lines
    5. Click on "Train the language model!" button
    6. Wait for it to finish adapting the model, a window will popup when it is finished.
    
    (Terminal version)
    1. In the terminal, change directory to VoiceTraining
    2. Execute training_script.py
    3. Follow the prompts on screen.
       After execution, the personalized language model is created in the AcousticModels directory with specified name.
    
How to use language model in application:
    (GUI Version)
    1. While in the application, click on "Voice".
    2. In the dropdown menu, click on "Choose language model"
    3. Choose the language model that you want to use

    (Manually)
    1. Go into the AcousticModels directory and copy the language model you want to use.
    2. Go into Profiles/en-US and paste the model into there.
    3. Delete the acoustic-model folder that was already in there
    4. Rename the new model to acoustic-model
